#
# In: USDARNOLD_ROOT
#
# Out: USDARNOLD_FOUND USDARNOLD_LIBRARY_DIR USDARNOLD_INCLUDE_DIR USDARNOLD_LIBRARY USDARNOLD_NDR_LIBRARY
# USDARNOLD_DEFINITIONS USDARNOLD_BASE

set(USDARNOLD_ROOT
    ""
    CACHE PATH "USDARNOLD ROOT")
find_program(
    USDARNOLD_BINARY USDARNOLD
    PATHS ${USDARNOLD_ROOT}/bin
    NO_SYSTEM_ENVIRONMENT_PATH)

if(USDARNOLD_BINARY STREQUAL "USDARNOLD_BINARY-NOTFOUND")
    find_program(
        USDARNOLD_BINARY usdAiShaderInfo
        PATHS ${USDARNOLD_ROOT}/bin
        NO_SYSTEM_ENVIRONMENT_PATH)
endif()

if(USDARNOLD_BINARY STREQUAL "USDARNOLD_BINARY-NOTFOUND")
    set(USDARNOLD_FOUND FALSE)
else()
    set(USDARNOLD_FOUND TRUE)
    get_filename_component(USDARNOLD_BASE ${USDARNOLD_BINARY} DIRECTORY)
    get_filename_component(USDARNOLD_BASE ${USDARNOLD_BASE} DIRECTORY)

    set(USDARNOLD_LIBRARY_DIR
        ${USDARNOLD_BASE}/lib
        CACHE PATH "Library directory" FORCE)
    set(USDARNOLD_INCLUDE_DIR
        ${USDARNOLD_BASE}/include
        CACHE PATH "Include directory" FORCE)

    # set(CMAKE_FIND_LIBRARY_SUFFIXES ".lib")

    # USDARNOLD
    find_library(
        USDARNOLD_LIBRARY
        NAMES usdAi libusdAi
        PATHS ${USDARNOLD_LIBRARY_DIR})
    find_library(
        USDARNOLD_NDR_LIBRARY
        NAMES ndrAi libndrAi
        PATHS ${USDARNOLD_ROOT}/plugin/usd)

    set(USDARNOLD_DEFINITIONS "") # why again
endif()

if(USDARNOLD_FIND_REQUIRED AND NOT USDARNOLD_FOUND)
    message(FATAL_ERROR "Could not find USDARNOLD")
endif()
